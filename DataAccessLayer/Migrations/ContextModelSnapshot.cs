// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityLayer.Concrete.Category", b =>
                {
                    b.Property<int>("kategori_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("kategori_id"), 1L, 1);

                    b.Property<string>("kategori_ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kategori_id");

                    b.ToTable("kategoriler");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Customers", b =>
                {
                    b.Property<int>("musteri_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("musteri_id"), 1L, 1);

                    b.Property<int>("Jobmeslek_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("kayit_tarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("musteri_ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("musteri_mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("musteri_sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("musteri_soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("musteri_id");

                    b.HasIndex("Jobmeslek_id");

                    b.ToTable("musteriler");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Job", b =>
                {
                    b.Property<int>("meslek_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("meslek_id"), 1L, 1);

                    b.Property<string>("meslek_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("meslek_id");

                    b.ToTable("meslekler");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Orders", b =>
                {
                    b.Property<int>("siparis_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("siparis_id"), 1L, 1);

                    b.Property<int>("Customersmusteri_id")
                        .HasColumnType("int");

                    b.Property<int>("Producturun_id")
                        .HasColumnType("int");

                    b.Property<string>("adet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("siparis_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("siparis_tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("urun_id")
                        .HasColumnType("int");

                    b.HasKey("siparis_id");

                    b.HasIndex("Customersmusteri_id");

                    b.HasIndex("Producturun_id");

                    b.ToTable("siparisler");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Product", b =>
                {
                    b.Property<int>("urun_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("urun_id"), 1L, 1);

                    b.Property<int>("Categorykategori_id")
                        .HasColumnType("int");

                    b.Property<string>("urun_aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urun_baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("urun_fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("urun_stok")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("urun_id");

                    b.HasIndex("Categorykategori_id");

                    b.ToTable("urunler");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Customers", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Job", "Job")
                        .WithMany("Customers")
                        .HasForeignKey("Jobmeslek_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Orders", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Customers", "Customers")
                        .WithMany("Orders")
                        .HasForeignKey("Customersmusteri_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Producturun_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Product", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("Categorykategori_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Category", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Customers", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Job", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
